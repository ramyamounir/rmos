"$schema" = 'https://starship.rs/config-schema.json'

format = """
[‚ï≠](fg:current_line)\
$hostname\
$sudo\
$directory\
$git_branch\
$git_status\
$fill\
$username\
$fill\
$conda\
$python\
$cmd_duration\
$direnv\
$time\
$localip\
$line_break\
$character\
"""

palette = 'catppuccin_mocha'
add_newline = true

[palettes.catppuccin_mocha]
foreground = '#D9E0EE'
background = '#1E1E2E'
current_line = '#2E2E3E'
primary = '#313244'
box = '#2E2E3E'
blue = '#8AADF4'
cyan = '#76E3F6'
green = '#A6E3A1'
orange = '#F9AF74'
pink = '#F5BDE6'
purple = '#CBA6F7'
red = '#F38BA8'
yellow = '#F9E2AF'
status = "#e23140"

[sudo]
format = '[$symbol]($style)'
style = 'bold green'
symbol ='üßô'
disabled = false

[hostname]
format = '(fg:current_line)[ÓÇ∂](fg:red)[$hostname](fg:primary bg:red)[ÓÇ¥](fg:red)'
ssh_only = true
disabled = false

[directory]
format = '[‚îÄ](fg:current_line)[ÓÇ∂](fg:pink)[Û∞∑è ](fg:primary bg:pink)[ÓÇ¥](fg:pink bg:box)[ $read_only$truncation_symbol$path](fg:foreground bg:box)[ÓÇ¥](fg:box)'
home_symbol = "~"
truncation_length = 0
read_only = 'Û±ßµ '
read_only_style = ''
truncate_to_repo = false

[git_branch]
format = '[‚îÄ](fg:current_line)[ÓÇ∂](fg:green)[$symbol](fg:primary bg:green)[ÓÇ¥](fg:green bg:box)[ $branch](fg:foreground bg:box)'
# symbol = 'Ó™Ñ Ôêó '
symbol = 'Ôëø '

[git_status]
format = '[$all_status](fg:green bg:box)[ÓÇ¥](fg:box)'
conflicted = ' ='
up_to_date = ''
untracked = ' ?${count}'
stashed = ' \$'
modified = ' !${count}'
staged = ' +'
renamed = ' ¬ª'
deleted = ' ‚úò'
ahead = ' ‚á°${count}'
diverged = ' ‚áï‚á°${ahead_count}‚á£${behind_count}'
behind = ' ‚á£${count}'

[fill]
symbol = '‚îÄ'
style = 'fg:current_line'

[direnv]
format = '[‚îÄ](fg:current_line)[ÓÇ∂](fg:blue)[üß¨](fg:primary bg:blue)[ÓÇ¥](fg:blue)'
style = 'bold blue'
disabled = false

[conda]
format = '[‚îÄ](fg:current_line)[ÓÇ∂](fg:yellow)[$symbol](fg:primary bg:yellow)[ÓÇ¥](fg:yellow bg:box)[ $environment](fg:foreground bg:box)[ÓÇ¥](fg:box)'
# symbol = "Û±îé üÖí"
symbol = "Ó∞ñ "
ignore_base = false  # Set to true if you want to hide the base environment

[custom.docker]
description = "Shows the docker symbol if the current directory has Dockerfile or docker-compose.yml files"
command = "echo üê≥"
files = ["Dockerfile", "docker-compose.yml", "docker-compose.yaml"]
when = """ command -v docker &> /dev/null; exit (echo $?); """
prefix = "on "

[localip]
ssh_only = false
format = '[‚îÄ](fg:current_line)[$localipv4](bold red)'
disabled = true

[python]
format = '[‚îÄ](fg:current_line)[ÓÇ∂](fg:green)[$symbol](fg:primary bg:green)[ÓÇ¥](fg:green bg:box)[ ($virtualenv) ](fg:foreground bg:box)[ÓÇ¥](fg:box)'
detect_extensions = []
detect_files = []
detect_folders = []
symbol = 'Óúº '

[cmd_duration]
min_time = 500
format = '[‚îÄ](fg:current_line)[ÓÇ∂](fg:orange)[ÔÉß ](fg:primary bg:orange)[ÓÇ¥](fg:orange bg:box)[ $duration](fg:foreground bg:box)[ÓÇ¥](fg:box)'

[time]
format = '[‚îÄ](fg:current_line)[ÓÇ∂](fg:purple)[Û∞¶ñ ](fg:primary bg:purple)[ÓÇ¥](fg:purple bg:box)[ $time](fg:foreground bg:box)[ÓÇ¥](fg:box)'
use_12hr = true
disabled = true

[username]
# format = '[‚îÄ](fg:current_line)[ÓÇ∂](fg:yellow)[Ôêï ](fg:primary bg:yellow)[ÓÇ¥](fg:yellow bg:box)[ $user](fg:foreground bg:box)[ÓÇ¥](fg:box) '
format = '[$user](bold green)'
show_always = true
disabled = true

[character]
format = """
[‚ï∞‚îÄ$symbol](fg:current_line) """
success_symbol = '[ÔÉö](fg:bold white)'
# error_symbol = '[√ó](fg:bold red)'

[profiles]
transient = """$character"""
