#!/usr/bin/env zsh
set -euo pipefail

source "$HOME/.config/scripts/tbp_common.zsh"

repo="$(tbp_repo_key)"
vars_json="$(json_get_repo "$repo" || true)"
if [[ -z "$vars_json" ]]; then
  print -u2 -- "No config found for repo '$repo' in $TBP_ENVMAP"
  exit 1
fi

# Convert JSON object to lines VAR=picker_name
var_lines=("${(@f)$(python - <<'PY' "$vars_json"
import json, sys
obj = json.loads(sys.argv[1])
for k,v in obj.items():
    print(f"{k}={v}")
PY
)}")

typeset -A selections
for line in "${var_lines[@]}"; do
  var="${line%%=*}"
  picker_name="${line#*=}"
  picker_path="$(tbp_picker_path "$picker_name")"

  if [[ ! -x "$picker_path" ]]; then
    print -u2 -- "Picker not executable for $var: $picker_path"
    exit 1
  fi

  if ! value="$(PROJECT_ROOT="$PROJECT_ROOT" "$picker_path")"; then
    print -u2 -- "Selection cancelled or failed for $var. Aborting."
    exit 1
  fi
  selections[$var]="$value"
done

for var value in "${(@kv)selections}"; do
  envrc_set "$var" "$value"
done

# Single status flag for prompt usage
envrc_set "CTX_ACTIVE" "1"

direnv_apply
