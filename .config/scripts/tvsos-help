#!/usr/bin/env python3

try:
    from re import sub
    from sys import argv
    from yaml import safe_load
    from textwrap import fill
except ImportError as e:
    quit()


class COLOURS:
    YELLOW = '\033[93m'
    BOLD = '\033[1m'
    END = '\033[0m'

COL_1_WIDTH = 30
COL_2_WIDTH = 90
COMMANDS    = safe_load(r"""
    applysettings:
        description: >
            Apply saved patches to apps and repositories
        examples: >
            $ applysettings all             # Applies all the following settings
            $ applysettings patch [1]       # Applies to configured patches (1 to make install)
            $ applysettings vscode          # Applies to VS Code settings
            $ applysettings [all]links      # Creates symbolic links "alllinks" requires sudo
    bibtidy:
        description: Tidy up a BibTeX file (uses bibtex-tidy)
        examples: $ bibtidy [OPTIONS] FILENAME
    bpr:
        description: Opens the bash profile file (if using bash)
        examples: $ bpr
    bsr:
        description: Source the bash profile file (if using bash)
        examples: $ bsr
    ca:
        description: Conda activate
        examples: $ ca ENVIRONMENT_NAME
    cdd:
        description: Conda deactivate
        examples: $ cdd
    cleanup:
        description: >
            Deletes log files, cached items, and unnecessary things. If all the
            unnecessary items are desired to be cleaned up, sudo privileges are
            required. This can be specified by passing USE_SUDO=1 (use sudo) or
            USE_SUDO=0 (don't use sudo) as an argument. Or, if it is not
            specified, the environment variable $AM_I_ADMIN is used. If even
            that is not set, by default, 0 is used.
        examples: >
            $ cleanup [USE_SUDO]            # cleanup all items (requires sudo)
    cm:
        description: ncmatrix
        examples: $ cm
    cmatrix:
        description: ncmatrix
        examples: $ cmatrix
    compiletex:
        description: Compile TeX file.
        examples: >
            $ compiletex                    # print help
            $ compiletex -t full-pdf        # generate PDF
    cpk:
        description: Pick colour and copy it to the clipboard
        examples: >
            $ cpk                           # hex
            $ cpk [ANY_TEXT]                # long format
    freeze:
        description: >
            Save the list of packages installed in the currently activated
            conda environment as files in the current working directory.
        examples: >
            $ freeze [TYPE]                 # TYPE = detailed|lean|all (default: detailed)
    gc:
        description: git add, commit, and push in one command
        examples: $ gc [-a PATTERN] [-m MESSAGE] [-b BRANCH]
    getarchsetupscripts:
        description: Get scripts for setting up Arch Linux afresh
        examples: $ getarchsetupscripts
    getjupyternodes:
        description: Get SLURM nodes with Jupyter Notebook
        examples: $ getjupyternodes
    getnodes:
        description: Get interactive SLURM nodes
        examples: $ getnodes
    god:
        description: Opens a shell session in which update commands are enabled.
        examples: $ god
    img2vid:
        description: Converts images in a directory into video.
        examples: $ img2vid IN_PATTERN DST [FPS]
    init-zim:
        description: Initialise ZIM
        examples: $ init-zim
    instal-omsh:
        description: Instal "Oh My ZSH/Bash" theme
        examples: >
            $ instal-omsh                    # default--zsh
            $ instal-omsh 0                  # zsh
            $ instal-omsh 1                  # bash
    instalfromcsv:
        description: Instal packages with system package manager
        examples: >
            $ instalfromcsv FILENAME         # instal without sudo
            $ instalfromcsv FILENAME -s      # instal with sudo
    killgpu:
        description: Kill processes on GPU(s)
        examples: $ killgpu
    linkbinsfromconda:
        description: >
            This command links explicitly installed packages with conda into
            $HOME/.local/bin or DST. This is useful when administrative
            privileges are not available but packages are installed through
            conda in the base environment. The linked packages are searched for
            from $HOME/.config/conda/environment.yaml, if available.
        examples: >
            $ linkbinsfromconda
            $ linkbinsfromconda [DST]
    lh:
        description: Equivalent to ls -ld .?*, i.e., list only hidden items
        examples: $ lh
    ll:
        description: Equivalent to ls -l
        examples: $ ll
    lla:
        description: Equivalent to ls -la
        examples: $ lla
    lsdisplaymonitors:
        description: List display monitors (for X)
        examples: $ lsdisplaymonitors
    lsdockerps:
        description: List docker processes/containers
        examples: $ lsdockerps
    lsenv:
        description: List environment variables
        examples: $ lsenv
    lsgroups:
        description: List groups in the system
        examples: $ lsgroups
    lsjobs:
        description: List ongoing SLURM jobs
        examples: $ lsjobs [SQUEUE_OPTIONS]
    lsnodes:
        description: List SLURM nodes
        examples: $ lsnodes
    lspkgs:
        description: List explicitly installed packages
        examples: $ lspkgs
    lspth:
        description: List path variables as a list
        examples: $ lspth
    lssys:
        description: A brief system information
        examples: $ lssys
    lsusers:
        description: List users in the system
        examples: $ lsusers
    mkpdir:
        description: Quickly make and link directories for ML projects.
        examples: $ mkpdir [PROJECT_DIR] [STORAGE_DIR]
    mntusb:
        description: >
            Mount or unmount USB devices (requires dwmenu, and, thus X11)
        examples: $ mntusb
    mp42gif:
        description: Converts an mp4 file to gif.
        examples: $ mp42gif FILENAME DST [SCALE] [FPS]
    note:
        description: >
            Create a quick note in $HOME/downloads and open it with the text 
        examples: $ note [FILENAME]
    notifyme:
        description: Sends a slack message; requires environment variables.
        examples: $ notifyme MESSAGE
    portal:
        description: >
            Mount or unmount an SSH location configured in
            $XDG_CONFIG_HOME/.ssh/config. Mounts at /media/network. If the given
            server is mounted, it will be unmounted; if not, it will be mounted.
            DST_PTH is an optional absolute path referring to a location in the
            server.
        examples: >
            $ portal SERVER_NAME [DST_PTH]
            $ portal ll                      # list currently mounted locations
            $ portal umount                  # unmount all mounted locations
    renew_certs:
        description: >
            Renews all certbot certificates. Command works in God mode and
            requires admin privileges.
        examples: $ renew_certs
    resettvsos:
        description: Ignore local changes, reset TVSOS git to HEAD
        examples: $ resettvsos
    rmpdir:
        description: Quickly remove links and directories for ML projects.
        examples: $ rmpdir [PROJECT_DIR] [STORAGE_DIR]
    s:
        description: Start the X server
        examples: $ s
    savesettings:
        description: Save patches applied to apps
        examples: >
            $ savesettings patch        # Saves configured patches
            $ savesettings vscode       # Saves VS Code settings
            $ savesettings all          # Saves all the settings
    setpermissions:
        description: Set special file and directory permissions (SSH, GPG)
        examples: $ setpermissions
    setupuser:
        description: Set up a new Linux user
        examples: >
            $ setupuser [DISTRO]        # arch, ubuntu, alpine
            $ source setupuser
            $ source <(curl -Ls sujal.tv/setupuser)
    setwallpaper:
        description: Set/change wallpaper.
        examples: $ setwallpaper [FILENAME]
    shellatnode:
        description: Opens the Bash shell in an interactive SLURM node
        examples: $ shellatnode JOBID
    srec:
        description: Screen recorder (uses ffcast/ffmpeg internally).
        examples: >
            $ srec                      # record a window
            $ srec crop                 # record a cropped portion
    syncloud:
        description: >
            Synchronises Nextcloud directory. Uses environment variables
            CLOUD_USERNAME, CLOUD_PASSWORD_FILE, CLOUD_DIR, and
            CLOUD_SERVER_URL.
        examples: >
            $ syncloud
    update:
        description: Update the OS, system packages, and apps
        examples: >
            $ update                    # update without sudo
            $ update 1                  # udpate with sudo
    tacp:
        description: tvsos add, commit, push
        examples: $ tacp MESSAGE
    trim:
        description: Trim a video or a GIF
        examples: >
            $ trim FILENAME START END DST
            $ trim input.mp4 "00:01:00" "00:01:10" output.mp4
    toggle-alacritty-theme:
        description: Toggles terminal theme
        examples: $ theme_shell
    tvsos:
        description: Git CLI for TVSOS; can be used like "git"
        examples: $ tvsos
    tvsos-help:
        description: Print this help message and exit
        examples: $ tvsos-help [COMMANDS...]
    vid2img:
        description: Converts a video into PNG image frames.
        examples: $ vid2img FILENAME DST_DIR [FPS]
    vpn-nord-connect:
        description: Connect to NORD VPN
        examples: $ vpn-nord-connect
    vpn-nord-disconnect:
        description: Disconnect from NORD VPN
        examples: $ vpn-nord-disconnect
    vpn-gp-connect:
        description: Connect to Global Protect VPN
        examples: $ vpn-gp-connect
    vpn-gp-disconnect:
        description: Disconnect from Global Protect VPN
        examples: $ vpn-gp-disconnect
    update:
        description: Update the OS, system packages, and apps
        examples: $ update
    waitforit:
        description: >
            Waits for a PID to finish and then executes a given
            command.
        examples: $ waitforit PID "CMD"
    waitforslurm:
        description: Waits for a SLURM job and runs the given command.
        examples: $ waitforslurm PID "CMD"
    wipeoutgpg:
        description: Deletes all GPG keys and cache files and restarts the agent
        examples: $ wipeoutgpg
    zpr:
        description: Opens the zsh profile file (if using zsh)
        examples: $ zpr
    zsr:
        description: Source the zsh profile file (if using zsh)
        examples: $ zsr
""")


def print_row(key, value, col1width, col2width):
    l_len, r_len = col1width - 2, col2width - 2
    description = fill(value['description'], r_len).split('\n')
    examples = value['examples'].split('$')[1:]
    examples = list(map(lambda i: fill(i, r_len), examples))

    for line_no, line in enumerate(description):
        print('│ ' + (key if line_no == 0 else '').rjust(l_len) + ' │',
              line.ljust(r_len), '│')
    for line in examples:
        print('│ ' + ''.rjust(l_len) + ' │',
              f'{COLOURS.YELLOW}{(">" + line).ljust(r_len)}{COLOURS.END}', '│')


def print_header():
    msg = r"""
    Welcome to TVSOS. The following is a list of shell commands and aliases
    along with a brief description of each explicitly provided by TVSOS.
    """

    print('╭' + '─' * (COL_1_WIDTH + COL_2_WIDTH + 1) + '╮')
    lines = fill(sub(r'\s+', ' ', msg.strip()),
                 COL_1_WIDTH + COL_2_WIDTH).split('\n')
    for line in lines:
        print('│ ' + line.ljust(COL_1_WIDTH + COL_2_WIDTH) + '│')
    print('├' + '─' * COL_1_WIDTH+ '┬' + '─' * COL_2_WIDTH + '┤')


def print_details(keys, show_header=True):
    info = {
        key: COMMANDS[key]
        for key
        in filter(lambda k: k in COMMANDS.keys(), keys)
    }

    if show_header: print_header()
    else: print('╭' + '─' * COL_1_WIDTH + '┬' + '─' * COL_2_WIDTH + '╮')
    N = len(info) - 1
    for idx, (key, value) in enumerate(info.items()):
        print_row(key, value, COL_1_WIDTH, COL_2_WIDTH)
        if idx < N:
            print('├' + '─' * COL_1_WIDTH+ '┼' + '─' * COL_2_WIDTH + '┤')
    print('╰' + '─' * COL_1_WIDTH + '┴' + '─' * COL_2_WIDTH + '╯')


if __name__ == '__main__':
    sorted_keys = sorted(COMMANDS.keys())
    if len(argv) == 1:
        print_details(sorted_keys, True)
    elif argv[1] == '_autocomplete':
        print(' '.join(sorted_keys))
    else:
        print_details(argv[1:], len(set(argv[1:])) == len(sorted_keys))

