#!/usr/bin/env bash

OPTION=$1

if [ -z $OPTION ]; then
    echo "Specify settings type: all | patch | vscode | alllinks | links"
    exit 0
fi

if [[ "$OPTION" = "vscode" ]] || [[ "$OPTION" = "all" ]]; then
    if command -v code &> /dev/null; then
        cat $XDG_CONFIG_HOME/vscode/extensions.txt | awk '{system("code --install-extension " $0)}'
        ln -sf $XDG_CONFIG_HOME/vscode/settings.json $XDG_CONFIG_HOME/Code/User/
        ln -sf $XDG_CONFIG_HOME/vscode/keybindings.json $XDG_CONFIG_HOME/Code/User/
    fi
fi

if [[ "$OPTION" = "alllinks" ]] || [[ "$OPTION" = "links" ]] || [[ "$OPTION" = "all" ]]; then
    HAS_SUDO=0
    if [[ "$1" = "alllinks" ]] || [[ "$OPTION" = "all" ]]; then
        HAS_SUDO=1
    fi

    # ssh
    TEMPKEYS="$HOME/TEMPKEYS"
    TEMP="$HOME/TEMP"
    mkdir $TEMPKEYS
    if [ -f $HOME/.ssh/authorized_keys ]; then
        cp $HOME/.ssh/authorized_keys $TEMP
    fi
    if [ -d $HOME/.ssh/keys ]; then
        if [ $(ls $HOME/.ssh/keys | wc -l) -gt 0 ]; then
            cp -r $HOME/.ssh/keys/* $TEMPKEYS
        fi
    fi
    rm -rf $HOME/.ssh
    ln -sf $XDG_CONFIG_HOME/ssh $HOME/.ssh
    if [ -f $TEMP ]; then
        mv $TEMP $HOME/.ssh/authorized_keys
    fi
    if [ -d $TEMPKEYS ]; then
        if [ $(ls $TEMPKEYS | wc -l) -gt 0 ]; then
            mv $TEMPKEYS/* $HOME/.ssh/keys
        fi
        rm -rf $TEMPKEYS
    fi

    # general links
    ln -sf $XDG_CONFIG_HOME/xdg/user-dirs.dirs $XDG_CONFIG_HOME/
    ! [ -L $HOME/.local/share ] && ln -sf $XDG_DATA_HOME/ $HOME/.local/share
    ! [ -L $HOME/.local/state ] && ln -sf $XDG_STATE_HOME/ $HOME/.local/state

    # mime
    mkdir -p $XDG_DATA_HOME/applications
    ln -sf $XDG_CONFIG_HOME/mime/mimeapps.list $XDG_CONFIG_HOME/
    ln -sf $XDG_CONFIG_HOME/mime/mimeapps.list $XDG_DATA_HOME/applications/ # deprecated but for legacy applications

    # custom MIME types
    mkdir -p $XDG_DATA_HOME/mime/packages
    ln -sf $XDG_CONFIG_HOME/mime/custom-mime-types/*.xml $XDG_DATA_HOME/mime/packages/
    for FILE in $(ls $XDG_DATA_HOME/mime/packages/*.xml); do
        xdg-mime install --novendor --mode user $FILE
    done
    update-mime-database $XDG_DATA_HOME/mime

    # app associations
    mkdir -p $XDG_DATA_HOME/applications
    ln -sf $XDG_CONFIG_HOME/mime/desktop-entries/*.desktop $XDG_DATA_HOME/applications/
    update-desktop-database $XDG_DATA_HOME/applications
fi

