#!/usr/bin/env python

import io
import sys
from contextlib import redirect_stdout
from dataclasses import fields, is_dataclass
from pathlib import Path

# Add TBP path for import
tbp_path = Path.home() / "tbp" / "tbp.monty"
sys.path.insert(0, str(tbp_path))

# Suppress all stdout during import
with redirect_stdout(io.StringIO()):
    try:
        import benchmarks.configs.names as names_module
    except ImportError as e:
        print(f"Import failed: {e}", file=sys.stderr)
        sys.exit(1)

# Detect all top-level dataclass types in names_module
for name, obj in vars(names_module).items():
    if isinstance(obj, type) and is_dataclass(obj):
        for field in fields(obj):
            print(f"{field.name}:{obj.__name__}")
