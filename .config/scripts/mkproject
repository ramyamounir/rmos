#!/usr/bin/bash

read -p "üìÅ Project name: " PROJECT_NAME
read -p "üîó Git repo (leave blank to init new): " GIT_REPO
read -p "üì¶ Package manager (uv/conda): " PKG_MANAGER
read -p "üå± Environment name: " ENV_NAME

PROJECT_DIR="$PWD/$PROJECT_NAME"
mkdir -p "$PROJECT_DIR"
cd "$PROJECT_DIR" || exit 1

# Git setup
if [ -n "$GIT_REPO" ]; then
    echo "üì• Cloning $GIT_REPO..."
    git clone "$GIT_REPO" .
else
    echo "üß¨ Initializing new git repo..."
    git init
fi

# Setup environment variables in .envrc
echo "# üöÄ Auto-generated by mkproject" > .envrc
echo "export PROJECT_ROOT=\"$(pwd)\"" >> .envrc
echo "export PROJECT_ENV=$ENV_NAME" >> .envrc

# Optionally set up auto-activation
read -p "‚öôÔ∏è  Enable auto-activation with direnv when entering this dir? [y/N] " AUTO_ENABLE
if [[ "$AUTO_ENABLE" =~ ^[Yy]$ ]]; then
    if [ "$PKG_MANAGER" = "uv" ]; then
        echo "export UV_VENV_HOME=\$XDG_CACHE_HOME/uv/venv" >> .envrc
        echo "source \$UV_VENV_HOME/\$PROJECT_ENV/bin/activate" >> .envrc
    elif [ "$PKG_MANAGER" = "conda" ]; then
        echo 'source "$HOME/.local/data/anaconda3/etc/profile.d/conda.sh"' >> .envrc
        echo 'conda activate "$PROJECT_ENV"' >> .envrc
    else
        echo "‚ùå Unknown package manager: $PKG_MANAGER"
        exit 1
    fi
fi

# Ask to initialize a uv environment if using uv
if [ "$PKG_MANAGER" = "uv" ]; then
    read -p "üí° Initialize a uv environment here using 'uve init'? If uv.lock exists, also sync? [y/N] " INIT_UV
    if [[ "$INIT_UV" =~ ^[Yy]$ ]]; then
        export PROJECT_ENV="$ENV_NAME"
        export UV_VENV_HOME="${XDG_CACHE_HOME:-$HOME/.cache}/uv/venv"

        echo "‚öôÔ∏è Running: uve init"
        uve init
        source $UV_VENV_HOME/$PROJECT_ENV/bin/activate

        if [ -f "uv.lock" ]; then
            echo "üîÑ uv.lock found ‚Äî syncing environment with lockfile..."
            uve sync
        fi

        unset PROJECT_ENV
        unset UV_VENV_HOME
        deactivate
    else
        echo "‚è≠Ô∏è Skipping uv environment setup."
    fi
fi


direnv allow .
echo "‚úÖ Project '$PROJECT_NAME' is ready in $PROJECT_DIR"
