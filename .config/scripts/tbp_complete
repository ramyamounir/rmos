#!/usr/bin/zsh

TBP_SET_SCRIPT="$HOME/.config/scripts/tbp_set"

_get_experiment_name() {
  if [[ -n "$EXPERIMENT_NAME" ]]; then
    echo "$EXPERIMENT_NAME"
  else
    echo "EXPERIMENT_NAME is not set. Running tbp_set ..." >&2
    local chosen
    chosen="$("$TBP_SET_SCRIPT")" || return 1
    echo "$chosen"
  fi
}

tbp_plot() {
  local exp
  exp="$(_get_experiment_name)" || return 1

  local log_dir="$HOME/tbp/results/monty/projects/evidence_eval_runs/logs/$exp"
  python "$PROJECT_ROOT/tools/plot/cli.py" "$1" "$log_dir" "${(@)@[2,-1]}"
}

tbp_run() {
  local exp
  exp="$(_get_experiment_name)" || return 1

  python "$PROJECT_ROOT/benchmarks/run.py" -e "$exp" "$@"
}

tbp_run_parallel() {
  local exp
  exp="$(_get_experiment_name)" || return 1

  python "$PROJECT_ROOT/benchmarks/run_parallel.py" -e "$exp" "$@"
}


function _complete_plot_cli() {
  local plot_dir="$PROJECT_ROOT/tools/plot"
  local -a script_names
  script_names=(${(f)"$(find "$plot_dir" -maxdepth 1 -type f -name '*.py' \
      ! -name '__init__.py' ! -name 'cli.py' \
      -exec basename {} .py \;)"})

  if (( CURRENT == 2 )); then
    _describe 'script names' script_names
  fi
}

compdef _complete_plot_cli tbp_plot

alias off_tbp_run='WANDB_MODE="offline" tbp_run'
alias on_tbp_run='WANDB_MODE="online" tbp_run'

alias off_tbp_run_parallel='WANDB_MODE="offline" tbp_run_parallel'
alias on_tbp_run_parallel='WANDB_MODE="online" tbp_run_parallel'
